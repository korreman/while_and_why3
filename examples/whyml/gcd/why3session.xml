<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="whyml">
<path name=".."/><path name="gcd.mlw"/>
<theory name="Gcd">
 <goal name="compute_gcd&#39;vc" expl="VC for compute_gcd">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="compute_gcd&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.2" expl="check modulo by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.3" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="139"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="25"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.5" expl="loop invariant preservation">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.6" expl="assertion">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.7" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.2" expl="loop variant decrease">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.7" expl="loop invariant preservation">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.4" expl="loop invariant preservation">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.3" expl="loop invariant preservation">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.7" expl="loop invariant preservation">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.8" expl="assertion">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="compute_gcd&#39;vc.6" expl="assertion">
  <proof prover="0"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CD3">
 <proof prover="0"><undone/></proof>
 </goal>
 <goal name="CD2">
 <transf name="split_vc" >
  <goal name="CD2.0">
  <proof prover="0"><undone/></proof>
  </goal>
  <goal name="CD2.1">
  <proof prover="0"><undone/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
