<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="micro-C">
<path name=".."/><path name="ordering.c"/>
<theory name="Ordering">
 <goal name="min&#39;vc" expl="VC for min" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="198"/></proof>
 </goal>
 <goal name="retain_evens&#39;vc" expl="VC for retain_evens" proved="true">
 <proof prover="1"><result status="valid" time="0.22" steps="1677"/></proof>
 </goal>
 <goal name="merge&#39;vc" expl="VC for merge">
 <transf name="split_vc" >
  <goal name="merge&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="merge&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="merge&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="merge&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="merge&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="merge&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="merge&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="merge&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="merge&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="merge&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="merge&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="45"/></proof>
  </goal>
  <goal name="merge&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="merge&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="merge&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="merge&#39;vc.14" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="merge&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="merge&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="merge&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="merge&#39;vc.18" expl="postcondition">
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="merge&#39;vc.8" expl="assertion">
  <proof prover="1"><undone/></proof>
  </goal>
  <goal name="merge&#39;vc.15" expl="assertion">
  <proof prover="1"><undone/></proof>
  </goal>
  <goal name="merge&#39;vc.13" expl="loop invariant preservation">
  <proof prover="1"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="merge_sort&#39;vc" expl="VC for merge_sort">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
